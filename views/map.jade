script.
  var markers = [];
  var cityCircle;
  var myPosition;

  function initialize(){
    var zoomLevel = 16;
    var geocoder = new google.maps.Geocoder();
    var gps = navigator.geolocation;
    var markerMaxWidth = 300;
    var locations = JSON.parse(!{JSON.stringify(Locations)});
    var mapOptions = {
      zoom: zoomLevel,
      center: new google.maps.LatLng(37.2834866,127.0447932),
      //center: new google.maps.LatLng(37.2834866,127.0447932),
      navigationControl : false,
      mapTypeControl : false,
      scaleControl : true,
      streetViewControl : false,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    }
    var geoOptions = {
      enableHighAccuracy: true,
      maximumAge : 0
    };
    map = new google.maps.Map(document.getElementById('map'),mapOptions);
    var geoLocationDiv = document.createElement('div');
    var geoLocationControl = new GeoLocationControl(geoLocationDiv,map,geoOptions,locations);
    map.controls[google.maps.ControlPosition.TOP_CENTER].push(geoLocationDiv);
    geoLocate(geoOptions,locations);
  }
  function GeoLocationControl(controlDiv, map, geoOptions, locations){
    // Set CSS for the control button
    var controlUI = document.createElement('div');
    controlUI.style.backgroundColor = '#444';
    controlUI.style.borderStyle = 'solid';
    controlUI.style.borderWidth = '1px';
    controlUI.style.borderColor = 'white';
    controlUI.style.height = '28px';
    controlUI.style.marginTop = '5px';
    controlUI.style.cursor = 'pointer';
    controlUI.style.textAlign = 'center';
    controlUI.title = 'Click to your location';
    controlDiv.appendChild(controlUI);
    // Set CSS for the control text
    var controlText = document.createElement('div');
    controlText.style.fontFamily = 'Arial,sans-serif';
    controlText.style.fontSize = '10px';
    controlText.style.color = 'white';
    controlText.style.paddingLeft = '10px';
    controlText.style.paddingRight = '10px';
    controlText.style.marginTop = '8px';
    controlText.innerHTML = '현재 위치 찾기';
    controlUI.appendChild(controlText);
    // Setup the click event listeners to geolocate user
    controlUI.addEventListener('click', function(){
      console.log("1");
      clearMarkers();
      geoLocate(geoOptions,locations);
    });
  }
  function geoLocate(geoOptions,locations){
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function (pos) {
        console.log("2");
        // 현재 위경도 값(GPS) 변수에 넣기.
        var latitude = pos.coords.latitude;
        var longitude = pos.coords.longitude;
        cityCircle = new google.maps.Circle({
          center: new google.maps.LatLng(latitude,longitude),
          //center: new google.maps.LatLng(37.2834866,127.0447932) ,
          radius: 250,
          strokeColor: "#000000",
          strokeOpacity: 0.8,
          strokeWeight: 2,
          fillColor: "#808080",
          fillOpacity: 0.5
        });
        cityCircle.setMap(map);
        // 현재 위치에 마커 생성
        myPosition = new google.maps.Marker({
          position: new google.maps.LatLng(latitude,longitude),
          //position: new google.maps.LatLng(37.2834866,127.0447932),
          map: map,
          draggable: false,
          icon: "https://maps.google.com/mapfiles/ms/micons/man.png"
        });
        map.setCenter(new google.maps.LatLng(latitude,longitude));
          //map.setCenter(new google.maps.LatLng(37.2834866,127.0447932));
        console.log(latitude);
        console.log(longitude);

        //반경500m 이내의 마커만 표시하기
        for(index in locations){
          if(Math.pow(Math.abs(latitude*100000 - locations[index].lat*100000),2)+
                  Math.pow(Math.abs(longitude*100000 - locations[index].lng*100000),2)<62500)addMarker(locations[index]);
        };
        function addMarker(data){
          var marker = new google.maps.Marker({
            position: new google.maps.LatLng(data.latitude,data.longitude),
            map: map,
            title: data.title,
            draggable:false,
            animation: google.maps.Animation.DROP
          });
          markers.push(marker);
          var contentString = data.info;
          var infowindow = new google.maps.InfoWindow({content: contentString});
          google.maps.event.addListener(marker,"click",function(){
            infowindow.open(map,marker);
          });
        };
      }, function (error) {
        switch (error.code) {
          case 1:
            $("#errormsg").html("User denied the request for Geolocation.");
            break;
          case 2:
            $("#errormsg").html("Location information is unavailable.");
            break;
          case 3:
            $("#errormsg").html("The request to get user location timed out.");
            break;
          case 0:
            $("#errormsg").html("An unknown error occurred.");
            break;
        }
      },geoOptions);
    } else {
      alert("Geolocation is not supported by this browser.");
    }
  }
  function clearMarkers() {
    for (var i = 0; i < markers.length; i++) {
      markers[i].setMap(null);
    }
    cityCircle.setMap(null);
    myPosition.setMap(null);
  }
  window.onload = initialize();
#map(style='width:100%; height:300px;')
